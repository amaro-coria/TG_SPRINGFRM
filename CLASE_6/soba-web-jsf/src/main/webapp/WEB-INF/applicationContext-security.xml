<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    					 http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                         http://www.springframework.org/schema/security
                         http://www.springframework.org/schema/security/spring-security.xsd">


	<http use-expressions="true" auto-config="true">

		<form-login login-processing-url="/j_spring_security_check"
		    login-page="/login.xhtml"
		    default-target-url="/welcome"
			authentication-failure-url="/login.xhtml?error"
			username-parameter="username"
			password-parameter="password" />
		<logout logout-success-url="/login.xhtml?logout" />
		<intercept-url pattern="/pages/*" access="hasRole('ROLE_USER')" />
		<intercept-url pattern="/pages/admin/*" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/login.xhtml" access="permitAll" />
		<intercept-url pattern="/resources/**"  access="permitAll" />
	</http>


	<authentication-manager alias="authenticationManager">
		<authentication-provider>
			<user-service>
				<user name="admin" password="admin" authorities="ROLE_ADMIN,ROLE_USER" />
				<user name="user" password="user" authorities="ROLE_USER" />
			</user-service>
		</authentication-provider>
	</authentication-manager>

	<!-- <authentication-manager> <authentication-provider> <jdbc-user-service 
		data-source-ref="dataSource" users-by-username-query="select nomb_usuario, 
		pwd_usuario, enabled from usuarios where nomb_usuario = ?" authorities-by-username-query="SELECT 
		usuarios.nomb_usuario, roles.nomb_rol FROM usuarios INNER JOIN usuarios_roles 
		ON usuarios_roles.id_usuario = usuarios.id_usuario INNER JOIN roles ON usuarios_roles.id_rol 
		= roles.id_rol WHERE usuarios.nomb_usuario = ?" /> </authentication-provider> 
		</authentication-manager> -->
</beans:beans>